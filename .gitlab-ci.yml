# Central Cert Web
# Copyright (C) 2019 Libriciel-SCOP
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

image: gitlab.libriciel.fr:4567/docker/node-with-chrome-headless:latest

stages:
  - build
  - test
  - package
  - deploy


variables:
  PROJECT_NAME: "central-cert-web"


cache: &global_cache
  key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
  untracked: true
  policy: pull
  paths:
    - ./node_modules/


before_script:
  # Generating an NPM-valid version number :
  #   - "1.2.3" on regular tagged commits
  #   - "0.0.1-branch_name" on others
  - CURRENT_VERSION=$(if [[ $CI_BUILD_TOKEN =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then echo $CI_BUILD_TOKEN; else echo "0.0.1-${CI_BUILD_TOKEN}"; fi)
  - sed -i "s/0.0.1-version/$CURRENT_VERSION/g" package.json
  - echo "version generated = $CURRENT_VERSION"
  # Refresh dependencies (This will be useless once/if a cache server is be set)
  - npm install


# <editor-fold desc="Build">


download_dependancies:
  stage: build
  before_script:
    - echo "Disable global before_script"
  script:
    - npm ci
  cache:
    <<: *global_cache
    policy: push



# <editor-fold desc="Build">


# <editor-fold desc="Test">


karma:
  stage: test
  coverage: '/Lines \W+: (\d+\.\d+)%.*/'
  script:
    - ./node_modules/@angular/cli/bin/ng test --progress false --watch false


sonarqube:
  stage: test
  only:
    - develop # SonarQube Community is limited to one branch. 'develop' is the most relevant.
  script:
    - ./node_modules/sonar-scanner/bin/sonar-scanner -Dsonar.login=$SONAR_TOKEN


# </editor-fold desc="Test">


# <editor-fold desc="Package">


dist:
  stage: package
  script:
    - ./node_modules/@angular/cli/bin/ng build --prod
  artifacts:
    name: "$PROJECT_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - dist/*


# </editor-fold desc="Package">


# <editor-fold desc="Deploy">


docker:
  tags:
    - docker-build
  stage: deploy
  before_script:
    - echo "Disable global before_script"
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_BUILD_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"


docker_latest:
  tags:
    - docker-build
  stage: deploy
  only:
    - tags
  before_script:
    - echo "Disable global before_script"
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_BUILD_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:latest"


# </editor-fold desc="Deploy">
